---
# tasks file for mediafellows.flussonic

- name: Create video bucket S3 (run on ansible host)
  s3_bucket:
    name: "{{ flussonic_bucket_name }}"
    state: present
    region: "{{ s3_aws_region }}"
  delegate_to: 127.0.0.1
  become: false
  when: s3_create_bucket

- name: Add flussonic apt repository key
  apt_key:
    url: 'http://debian.erlyvideo.org/binary/gpg.key'
    state: present

- name: Add flussonic apt repository
  apt_repository:
    repo: 'deb http://debian.erlyvideo.org binary/'
    update_cache: yes
    state: present

- name: Install flussonic apt packages
  apt:
    name:
      - flussonic
      - flussonic-transcoder
      - flussonic-python
    state: present

- name: Make sure flussonic system user exists
  user:
    name: "{{ flussonic_user }}"
    state: present

- name: Make sure flussonic etc dir exists and belongs to flussonic_user
  file:
    path: /etc/flussonic
    owner: "{{ flussonic_user }}"
    state: directory

- name: Make sure flussonic_vod_cache_dir exists and belongs to flussonic_user
  file:
    path: "{{ flussonic_vod_cache_dir }}"
    owner: "{{ flussonic_user }}"
    state: directory

- name: Put run_as in place to define as which system user flussonic should run
  template:
    src: run_as
    dest: /etc/flussonic/run_as
    mode: 0644

- name: Put license.txt in place
  template:
    src: license.txt.j2
    dest: /etc/flussonic/license.txt

- name: Add flussonic configuration (based on role template & params)
  template:
    src: flussonic.conf.j2
    dest: /etc/flussonic/flussonic.conf
    owner: "{{ flussonic_user }}"
  when: flussonic_config_file is undefined
  notify:
    - restart flussonic

- name: Use custom template path for flussonic.conf
  template:
    src: "{{ flussonic_config_file }}"
    dest: /etc/flussonic/flussonic.conf
  when: flussonic_config_file is defined
  notify:
    - restart flussonic

- name: Add crossdomain policy (when enabled)
  copy:
    src: crossdomain.xml
    dest: /opt/flussonic/wwwroot/crossdomain.xml
  when: flussonic_crossdomain

- name: Run handlers (restarts etc) before checking status
  meta: flush_handlers

- name: Get Flussonic status
  command: /etc/init.d/flussonic status
  register: flussonic_status
  ignore_errors: yes

- name: Flussonic status output
  debug: var=flussonic_status
